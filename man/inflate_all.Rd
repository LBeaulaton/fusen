% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inflate_all.R
\name{inflate_all}
\alias{inflate_all}
\alias{inflate_all_no_check}
\title{Inflate all your flat files}
\usage{
inflate_all(pkg = ".", document = TRUE, check = TRUE, overwrite = TRUE, ...)

inflate_all_no_check(pkg = ".", document = TRUE, overwrite = TRUE, ...)
}
\arguments{
\item{pkg}{Path to package}

\item{document}{Logical. Whether to document your package using \code{\link[attachment:att_amend_desc]{att_amend_desc}}}

\item{check}{Logical. Whether to check package after Rmd inflating}

\item{overwrite}{Logical (TRUE, FALSE) or character ("ask", "yes", "no).
Whether to overwrite vignette and functions if already exists.}

\item{...}{Arguments passed to \code{devtools::check()}.
For example, you can do \code{inflate(check = TRUE, quiet = TRUE)}, where \code{quiet} is
passed to \code{devtools::check()}.}
}
\value{
side effect. Inflates all your flat files that can be inflated.
}
\description{
Inflate all the flat files stored in dev/ and starting with "flat_"
}
\examples{
\dontrun{
# Usually, in the current package run inflate_all() directly
# This function has an impact on the current user workspace
inflate_all()
}

# You can also inflate_all flats of another package as follows
# A dummy package with a flat file
dummypackage <- tempfile("inflateall")
dir.create(dummypackage)
fill_description(pkg = dummypackage, fields = list(Title = "Dummy Package"))
flat_files <- add_minimal(
  pkg = dummypackage,
  overwrite = TRUE,
  open = FALSE
)
flat_file <- flat_files[grep("flat", basename(flat_files))]
# Inflate the flat file once
usethis::with_project(dummypackage, {
  # if you are starting from a brand new package, inflate_all() will crash
  # it's because of the absence of a fusen config file
  # inflate_all()

  # Add licence
  usethis::use_mit_license("John Doe")

  # you need to inflate manually your flat file first
  inflate(
    pkg = dummypackage,
    flat_file = flat_file,
    vignette_name = "Get started",
    check = FALSE,
    open_vignette = FALSE,
    document = TRUE,
    overwrite = "yes"
  )

  # your config file has been created
  config_yml_ref <-
    yaml::read_yaml(getOption("fusen.config_file", default = "dev/config_fusen.yaml"))
})

# Next time, you can run inflate_all() directly
usethis::with_project(dummypackage, {
  # now you can run inflate_all()
  inflate_all(check = FALSE, document = TRUE)
})

# Clean the temporary directory
unlink(dummypackage, recursive = TRUE)
}
